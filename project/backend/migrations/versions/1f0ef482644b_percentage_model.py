"""percentage model

Revision ID: 1f0ef482644b
Revises: f635b435dfdd
Create Date: 2025-10-01 13:49:08.366436

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1f0ef482644b'
down_revision = 'f635b435dfdd'
branch_labels = None
depends_on = None


def upgrade():
    conn = op.get_bind()
    inspector = sa.inspect(conn)

    # --- PATCH untuk tabel ports ---
    port_columns = [col["name"] for col in inspector.get_columns("ports")]
    if "updated_at" not in port_columns:
        with op.batch_alter_table("ports", schema=None) as batch_op:
            batch_op.add_column(sa.Column("updated_at", sa.DateTime(), nullable=True))
    else:
        print(" Kolom 'updated_at' sudah ada di tabel 'ports', skip penambahan.")

    # --- PATCH untuk tabel voyages ---
    voyage_columns = [col["name"] for col in inspector.get_columns("voyages")]
    with op.batch_alter_table("voyages", schema=None) as batch_op:
        if "berth_loc" not in voyage_columns:
            batch_op.add_column(sa.Column("berth_loc", sa.String(length=100), nullable=True))
        else:
            print(" Kolom 'berth_loc' sudah ada di tabel 'voyages', skip penambahan.")

        # Hapus constraint & kolom lama hanya jika masih ada
        fk_constraints = [fk["name"] for fk in inspector.get_foreign_keys("voyages")]
        if "voyages_port_id_fkey" in fk_constraints:
            batch_op.drop_constraint("voyages_port_id_fkey", type_="foreignkey")

        if "port_id" in voyage_columns:
            batch_op.drop_column("port_id")

    # ### end Alembic commands ###




def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('voyages', schema=None) as batch_op:
        batch_op.add_column(sa.Column('port_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key(batch_op.f('voyages_port_id_fkey'), 'ports', ['port_id'], ['id'])
        batch_op.drop_column('berth_loc')

    with op.batch_alter_table('ports', schema=None) as batch_op:
        batch_op.drop_column('updated_at')

    op.create_table('percentage_container_movements',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('cm_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('bongkaran_pengajuan_empty_20dc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bongkaran_pengajuan_full_20dc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bongkaran_pengajuan_empty_40hc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bongkaran_pengajuan_full_40hc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pengajuan_acc_empty_20dc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pengajuan_acc_full_20dc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pengajuan_acc_empty_40hc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('pengajuan_acc_full_40hc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('acc_tlss_empty_20dc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('acc_tlss_full_20dc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('acc_tlss_empty_40hc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('acc_tlss_full_40hc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('acc_turun_cy_empty_20dc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('acc_turun_cy_full_20dc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('acc_turun_cy_empty_40hc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('acc_turun_cy_full_40hc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_bongkaran_20dc', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_bongkaran_40hc', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_pengajuan_20dc', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_pengajuan_40hc', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_acc_20dc', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_acc_40hc', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_tlss_20dc', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_tlss_40hc', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_turun_20dc', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_turun_40hc', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('percentage_pengajuan_20dc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('percentage_pengajuan_40hc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('percentage_acc_20dc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('percentage_acc_40hc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('percentage_tl_20dc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('percentage_tl_40hc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('percentage_realisasi_20dc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('percentage_realisasi_40hc', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['cm_id'], ['container_movements.id'], name=op.f('percentage_container_movements_cm_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('percentage_container_movements_pkey')),
    sa.UniqueConstraint('cm_id', name=op.f('percentage_container_movements_cm_id_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    # ### end Alembic commands ###
